{
  "openapi": "3.1.0",
  "info": {
    "title": "Imari Clinic API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/patients/": {
      "post": {
        "tags": [
          "patients"
        ],
        "summary": "Create Patient",
        "description": "Create a new patient",
        "operationId": "create_patient_api_v1_patients__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "patients"
        ],
        "summary": "List Patients",
        "description": "List patients with pagination metadata including total, limit, and offset",
        "operationId": "list_patients_api_v1_patients__get",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of records to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of records to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of records to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of records to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patients/search": {
      "get": {
        "tags": [
          "patients"
        ],
        "summary": "Search Patients",
        "description": "Search patients using full text search across all patient fields",
        "operationId": "search_patients_api_v1_patients_search_get",
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Search term to find patients by name, email, phone, or address",
              "title": "Term"
            },
            "description": "Search term to find patients by name, email, phone, or address"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of records to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of records to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of records to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of records to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patients/summary": {
      "get": {
        "tags": [
          "patients"
        ],
        "summary": "Get Patient Summary",
        "description": "Get patient summary statistics including total patients, new patients, and follow-up patients",
        "operationId": "get_patient_summary_api_v1_patients_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientSummary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patients/{patient_id}": {
      "get": {
        "tags": [
          "patients"
        ],
        "summary": "Get Patient",
        "description": "Get a specific patient by ID",
        "operationId": "get_patient_api_v1_patients__patient_id__get",
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientReadWithAppointments"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "patients"
        ],
        "summary": "Update Patient",
        "description": "Update an existing patient",
        "operationId": "update_patient_api_v1_patients__patient_id__patch",
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "patients"
        ],
        "summary": "Delete Patient",
        "description": "Delete a patient",
        "operationId": "delete_patient_api_v1_patients__patient_id__delete",
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/": {
      "post": {
        "tags": [
          "appointments"
        ],
        "summary": "Create Appointment",
        "operationId": "create_appointment_api_v1_appointments__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "appointments"
        ],
        "summary": "List Appointments",
        "operationId": "list_appointments_api_v1_appointments__get",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "Start date for appointments",
              "title": "Start Date"
            },
            "description": "Start date for appointments"
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 31,
              "minimum": 1,
              "description": "Number of days to fetch (1-31)",
              "default": 7,
              "title": "Days"
            },
            "description": "Number of days to fetch (1-31)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentRead"
                  },
                  "title": "Response List Appointments Api V1 Appointments  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/{appointment_id}": {
      "get": {
        "tags": [
          "appointments"
        ],
        "summary": "Get Appointment",
        "operationId": "get_appointment_api_v1_appointments__appointment_id__get",
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "appointments"
        ],
        "summary": "Update Appointment",
        "operationId": "update_appointment_api_v1_appointments__appointment_id__put",
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Appointment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "appointments"
        ],
        "summary": "Delete Appointment",
        "operationId": "delete_appointment_api_v1_appointments__appointment_id__delete",
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/by_patient/{patient_id}": {
      "get": {
        "tags": [
          "appointments"
        ],
        "summary": "Get Appointments By Patient",
        "operationId": "get_appointments_by_patient_api_v1_appointments_by_patient__patient_id__get",
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentRead"
                  },
                  "title": "Response Get Appointments By Patient Api V1 Appointments By Patient  Patient Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointment-types": {
      "get": {
        "tags": [
          "appointment-types"
        ],
        "summary": "Get Appointment Types",
        "operationId": "get_appointment_types_api_v1_appointment_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AppointmentTypeRead"
                  },
                  "type": "array",
                  "title": "Response Get Appointment Types Api V1 Appointment Types Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "appointment-types"
        ],
        "summary": "Create Appointment Type",
        "operationId": "create_appointment_type_api_v1_appointment_types_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentTypeCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentTypeRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointment-types/{appointment_type_id}": {
      "get": {
        "tags": [
          "appointment-types"
        ],
        "summary": "Get Appointment Type",
        "operationId": "get_appointment_type_api_v1_appointment_types__appointment_type_id__get",
        "parameters": [
          {
            "name": "appointment_type_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Appointment Type Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentTypeRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "appointment-types"
        ],
        "summary": "Delete Appointment Type",
        "operationId": "delete_appointment_type_api_v1_appointment_types__appointment_type_id__delete",
        "parameters": [
          {
            "name": "appointment_type_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Appointment Type Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointment-types/{appointment_type_name}/available-slots/{date}": {
      "get": {
        "tags": [
          "appointment-types"
        ],
        "summary": "Get Available Slots",
        "operationId": "get_available_slots_api_v1_appointment_types__appointment_type_name__available_slots__date__get",
        "parameters": [
          {
            "name": "appointment_type_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Appointment Type Name"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Available Slots Api V1 Appointment Types  Appointment Type Name  Available Slots  Date  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/weather/{country_code}/{city}": {
      "get": {
        "tags": [
          "weather"
        ],
        "summary": "Get Weather",
        "description": "Get weather information and 24-hour forecast for a specified country code and city.\n\nArgs:\n    country_code (str): Two-letter country code (e.g., \"TN\", \"DE\", \"FR\")\n    city (str): City name (e.g., \"Tunis\", \"Berlin\", \"Paris\")\n\nReturns:\n    WeatherResponse: Weather information including location details and 24-hour forecast",
        "operationId": "get_weather_api_v1_weather__country_code___city__get",
        "parameters": [
          {
            "name": "country_code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Country Code"
            }
          },
          {
            "name": "city",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "City"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeatherResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AppointmentCreate": {
        "properties": {
          "patient_id": {
            "type": "string",
            "title": "Patient Id"
          },
          "appointment_type_name": {
            "type": "string",
            "title": "Appointment Type Name"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "start_time": {
            "type": "string",
            "format": "time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "time",
            "title": "End Time"
          },
          "status": {
            "$ref": "#/components/schemas/AppointmentStatus",
            "default": "Booked"
          }
        },
        "type": "object",
        "required": [
          "patient_id",
          "appointment_type_name",
          "date",
          "start_time",
          "end_time"
        ],
        "title": "AppointmentCreate"
      },
      "AppointmentRead": {
        "properties": {
          "patient_id": {
            "type": "string",
            "title": "Patient Id"
          },
          "appointment_type_name": {
            "type": "string",
            "title": "Appointment Type Name"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "start_time": {
            "type": "string",
            "format": "time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "time",
            "title": "End Time"
          },
          "status": {
            "$ref": "#/components/schemas/AppointmentStatus",
            "default": "Booked"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "patient_first_name": {
            "type": "string",
            "title": "Patient First Name"
          },
          "patient_last_name": {
            "type": "string",
            "title": "Patient Last Name"
          }
        },
        "type": "object",
        "required": [
          "patient_id",
          "appointment_type_name",
          "date",
          "start_time",
          "end_time",
          "id",
          "patient_first_name",
          "patient_last_name"
        ],
        "title": "AppointmentRead"
      },
      "AppointmentStatus": {
        "type": "string",
        "enum": [
          "Booked",
          "Cancelled",
          "Completed",
          "No Show"
        ],
        "title": "AppointmentStatus"
      },
      "AppointmentTypeCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "duration_minutes": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Duration Minutes"
          }
        },
        "type": "object",
        "required": [
          "name",
          "duration_minutes"
        ],
        "title": "AppointmentTypeCreate"
      },
      "AppointmentTypeRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "duration_minutes": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Duration Minutes"
          }
        },
        "type": "object",
        "required": [
          "name",
          "duration_minutes"
        ],
        "title": "AppointmentTypeRead"
      },
      "AppointmentUpdate": {
        "properties": {
          "date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AppointmentStatus"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "AppointmentUpdate"
      },
      "Gender": {
        "type": "string",
        "enum": [
          "male",
          "female"
        ],
        "title": "Gender"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HourlyForecast": {
        "properties": {
          "time": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Time"
          },
          "temperature_2m": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Temperature 2M"
          },
          "relative_humidity_2m": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Relative Humidity 2M"
          },
          "precipitation": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Precipitation"
          },
          "weathercode": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Weathercode"
          },
          "windspeed_10m": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Windspeed 10M"
          }
        },
        "type": "object",
        "required": [
          "time",
          "temperature_2m",
          "relative_humidity_2m",
          "precipitation",
          "weathercode",
          "windspeed_10m"
        ],
        "title": "HourlyForecast"
      },
      "PatientCreate": {
        "properties": {
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "date_of_birth": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Of Birth"
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Gender"
              },
              {
                "type": "null"
              }
            ]
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Street"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          },
          "zip_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zip Code"
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "phone"
        ],
        "title": "PatientCreate"
      },
      "PatientListResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/PatientRead"
            },
            "type": "array",
            "title": "Data"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "limit": {
            "type": "integer",
            "title": "Limit"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          }
        },
        "type": "object",
        "required": [
          "data",
          "total",
          "limit",
          "offset"
        ],
        "title": "PatientListResponse",
        "description": "Paginated response model for patient list"
      },
      "PatientRead": {
        "properties": {
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "date_of_birth": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Of Birth"
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Gender"
              },
              {
                "type": "null"
              }
            ]
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Street"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          },
          "zip_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zip Code"
          },
          "id": {
            "type": "string",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "phone",
          "id"
        ],
        "title": "PatientRead"
      },
      "PatientReadWithAppointments": {
        "properties": {
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "date_of_birth": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Of Birth"
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Gender"
              },
              {
                "type": "null"
              }
            ]
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Street"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          },
          "zip_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zip Code"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "appointments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AppointmentRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointments"
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "phone",
          "id"
        ],
        "title": "PatientReadWithAppointments"
      },
      "PatientSummary": {
        "properties": {
          "total_patients": {
            "type": "integer",
            "title": "Total Patients"
          },
          "new_patients": {
            "type": "integer",
            "title": "New Patients"
          },
          "patients_with_follow_up": {
            "type": "integer",
            "title": "Patients With Follow Up"
          },
          "patients_with_email": {
            "type": "integer",
            "title": "Patients With Email"
          }
        },
        "type": "object",
        "required": [
          "total_patients",
          "new_patients",
          "patients_with_follow_up",
          "patients_with_email"
        ],
        "title": "PatientSummary",
        "description": "Summary statistics for patients"
      },
      "PatientUpdate": {
        "properties": {
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "date_of_birth": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Of Birth"
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Gender"
              },
              {
                "type": "null"
              }
            ]
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Street"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          },
          "zip_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zip Code"
          }
        },
        "type": "object",
        "title": "PatientUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WeatherForecast": {
        "properties": {
          "latitude": {
            "type": "number",
            "title": "Latitude"
          },
          "longitude": {
            "type": "number",
            "title": "Longitude"
          },
          "timezone": {
            "type": "string",
            "title": "Timezone"
          },
          "timezone_abbreviation": {
            "type": "string",
            "title": "Timezone Abbreviation"
          },
          "elevation": {
            "type": "number",
            "title": "Elevation"
          },
          "hourly_units": {
            "$ref": "#/components/schemas/WeatherUnits"
          },
          "hourly": {
            "$ref": "#/components/schemas/HourlyForecast"
          }
        },
        "type": "object",
        "required": [
          "latitude",
          "longitude",
          "timezone",
          "timezone_abbreviation",
          "elevation",
          "hourly_units",
          "hourly"
        ],
        "title": "WeatherForecast"
      },
      "WeatherResponse": {
        "properties": {
          "city": {
            "type": "string",
            "title": "City"
          },
          "country": {
            "type": "string",
            "title": "Country"
          },
          "coordinates": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Coordinates"
          },
          "forecast": {
            "$ref": "#/components/schemas/WeatherForecast"
          }
        },
        "type": "object",
        "required": [
          "city",
          "country",
          "coordinates",
          "forecast"
        ],
        "title": "WeatherResponse"
      },
      "WeatherUnits": {
        "properties": {
          "time": {
            "type": "string",
            "title": "Time"
          },
          "temperature_2m": {
            "type": "string",
            "title": "Temperature 2M"
          },
          "relative_humidity_2m": {
            "type": "string",
            "title": "Relative Humidity 2M"
          },
          "precipitation": {
            "type": "string",
            "title": "Precipitation"
          },
          "weathercode": {
            "type": "string",
            "title": "Weathercode"
          },
          "windspeed_10m": {
            "type": "string",
            "title": "Windspeed 10M"
          }
        },
        "type": "object",
        "required": [
          "time",
          "temperature_2m",
          "relative_humidity_2m",
          "precipitation",
          "weathercode",
          "windspeed_10m"
        ],
        "title": "WeatherUnits"
      }
    }
  }
}